/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-08-22 09:02:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.login_005fsignup;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1661158901181L));
    _jspx_dependants.put("jar:file:/D:/workspace-spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/People-in-Trip/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("    \r\n");

	request.setCharacterEncoding("UTF-8");

      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("	<title>로그인</title>\r\n");
      out.write("	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"../resources/css/login_signup/login.css\" />\r\n");
      out.write("	<script type=\"text/javascript\" src=\"../resources/js/login/login.js\"></script>\r\n");
      out.write("	<link href='https://fonts.googleapis.com/css?family=Pacifico' rel='stylesheet' />	\r\n");
      out.write("	<script src=\"https://accounts.google.com/gsi/client\" async defer></script>\r\n");
      out.write("    <script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"https://static.nid.naver.com/js/naverLogin_implicit-1.0.3.js\" charset=\"utf-8\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.11.3.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"login_form\">\r\n");
      out.write("		<h1><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/mainpage/main\" style=\"text-decoration: none;\">People in Trip</a></h1>\r\n");
      out.write("		<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login_signup/login\" name=\"loginFrm\" method=\"post\">\r\n");
      out.write("			<div>\r\n");
      out.write("				<input type=\"text\" placeholder=\"아이디\" id=\"login_id\" name=\"id\" onfocus=\"this.placeholder='';\" onblur=\"this.placeholder='아이디'\" /><br>\r\n");
      out.write("				<input type=\"password\" placeholder=\"비밀번호\" id=\"login_pw\" name=\"pwd\" onfocus=\"this.placeholder='';\" onblur=\"this.placeholder='비밀번호'\" />\r\n");
      out.write("				<ul>\r\n");
      out.write("					<li id=\"login_menu\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login_signup/find_id\" id=\"login_menu\">아아디 찾기</a></li>\r\n");
      out.write("					<li id=\"login_menu\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login_signup/find_pw\" id=\"login_menu\">비밀번호 찾기</a></li>\r\n");
      out.write("					<li id=\"login_menu\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login_signup/signup_input\" id=\"login_menu\">회원가입</a></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("				<button type=\"submit\" id=\"login_bt\" onclick=\"loginChk();\"><strong>로그인</strong></button>\r\n");
      out.write("				 ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("		<div>\r\n");
      out.write("			<p id=\"login_ez\">간편하게 로그인 하기</p><br>		\r\n");
      out.write("			<div id=\"buttonDiv\"></div>\r\n");
      out.write("			<a class=\"p-2\" href=\"https://kauth.kakao.com/oauth/authorize?client_id=324f9639dc834b0464a6ccdfff50c908&redirect_uri=http://localhost:8080/intrip/kakaologin&response_type=code\">\r\n");
      out.write("			<img src=\"../resources/images/login/kakao_login_medium.png\"></a>\r\n");
      out.write("			<a id=\"naver_id_login\"><img src=\"../resources/images/login/naver.png\"></a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function handleCredentialResponse(response) { \r\n");
      out.write("	const responsePayload = parseJwt(response.credential);\r\n");
      out.write("	console.log(\"ID: \" + responsePayload.sub);\r\n");
      out.write("    console.log('Full Name: ' + responsePayload.name);\r\n");
      out.write("    console.log('Given Name: ' + responsePayload.given_name);\r\n");
      out.write("    console.log('Family Name: ' + responsePayload.family_name);\r\n");
      out.write("    console.log(\"Image URL: \" + responsePayload.picture);\r\n");
      out.write("    console.log(\"Email: \" + responsePayload.email);\r\n");
      out.write("    $(function() {\r\n");
      out.write("    	var date = new Date();\r\n");
      out.write("		$.ajax({\r\n");
      out.write("		    url : '/intrip/loginGoogle',\r\n");
      out.write("		    type : 'post',\r\n");
      out.write("		    data : {\r\n");
      out.write("				\"id\" : responsePayload.sub,\r\n");
      out.write("				\"name\" : responsePayload.name,\r\n");
      out.write("				\"pwd\" : responsePayload.sub,\r\n");
      out.write("		        \"nick_nm\" : responsePayload.name,\r\n");
      out.write("				\"email\" : responsePayload.email, \r\n");
      out.write("			    },\r\n");
      out.write("		    success : function (data) {\r\n");
      out.write("				alert(\"구글아이디로 로그인 되었습니다.\");\r\n");
      out.write("				location.href=\"/intrip/mainpage/main\";\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	})\r\n");
      out.write("}          \r\n");
      out.write("\r\n");
      out.write("function parseJwt (token) {\r\n");
      out.write("    var base64Url = token.split('.')[1];\r\n");
      out.write("    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n");
      out.write("    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n");
      out.write("        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n");
      out.write("    }).join(''));\r\n");
      out.write("    return JSON.parse(jsonPayload);\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("window.onload = function () {\r\n");
      out.write("	google.accounts.id.initialize({\r\n");
      out.write("		client_id: \"1078833173748-jtu86j39qajahe8lo49oi53e67jmrpsp.apps.googleusercontent.com\",\r\n");
      out.write("		callback: handleCredentialResponse\r\n");
      out.write("	});\r\n");
      out.write("	google.accounts.id.renderButton(\r\n");
      out.write("		document.getElementById(\"buttonDiv\"),\r\n");
      out.write("		{ type: \"icon\", theme: \"filled_blue\", size: \"large\"}  // customization attributes\r\n");
      out.write("	);  \r\n");
      out.write("	google.accounts.id.prompt(); // also display the One Tap dialog\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function attachSignin(element) {\r\n");
      out.write("	handleCredentialResponse.attachClickHandler(element, {},\r\n");
      out.write("        function(responsePayload) {\r\n");
      out.write("	}, function(error) {\r\n");
      out.write("		console.log('call check2'); \r\n");
      out.write("  		alert(JSON.stringify(error, undefined, 2));\r\n");
      out.write("	});\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    var naver_id_login = new naver_id_login(\"I650TE1jF8gBiGSdtx4x\", \"http://localhost:8080/intrip/login/oauth2/code/naver\");\r\n");
      out.write("    var state = naver_id_login.getUniqState();\r\n");
      out.write("    naver_id_login.setDomain(\"http://localhost:8080/\");\r\n");
      out.write("    naver_id_login.setState(state);\r\n");
      out.write("    naver_id_login.init_naver_id_login();\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/login_signup/login.jsp(4,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/login_signup/login.jsp(4,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/login_signup/login.jsp(4,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/login_signup/login.jsp(36,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message == 'error'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				 <div style=\"color:red;\"> 아이디 또는 비밀번호가 일치하지 않습니다.</div>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
