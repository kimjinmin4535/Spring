/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-08-23 13:02:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.login_005fsignup;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signup_005finput_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1661158901181L));
    _jspx_dependants.put("jar:file:/D:/workspace-spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/People-in-Trip/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<head>\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"../resources/css/login_signup/signup_input.css\">\r\n");
      out.write("	<script type=\"text/javascript\" src=\"../resources/js/signup/signup_input.js\"></script>\r\n");
      out.write("	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Raleway:wght@600&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link href='https://fonts.googleapis.com/css?family=Pacifico' rel='stylesheet'>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>회원가입_정보 입력</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- <header>\r\n");
      out.write("	    <div><h1>People in trip</h1></div>\r\n");
      out.write("	</header> -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/header/header.jsp", out, false);
      out.write("\r\n");
      out.write("	<div class=\"signup_box\">\r\n");
      out.write("	    <aside class=\"signup_leftside\">\r\n");
      out.write("	        <div id=\"aside_box1\">정보<br/>입력</div>\r\n");
      out.write("	        <div id=\"aside_box2\">가입<br/>완료</div>\r\n");
      out.write("	    </aside>\r\n");
      out.write("	    <section class=\"signup_main\" id=\"signup_input\">\r\n");
      out.write("	        <div id=\"main_div1\">\r\n");
      out.write("	            <table id=\"main_table1\">\r\n");
      out.write("	                <tr>\r\n");
      out.write("	                    <td id=\"main_head\">회원가입_정보입력</td>\r\n");
      out.write("	                    <td id=\"main_head2\"> 전부 필수 작성사항입니다.</td>\r\n");
      out.write("	                </tr>\r\n");
      out.write("	            </table>\r\n");
      out.write("	        </div>\r\n");
      out.write("	        <div id=\"main_div2\">\r\n");
      out.write("	        	<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/signup/addMember\" name=\"form_input\" method=\"post\"  >\r\n");
      out.write("	                <table id=\"main_table2\" border=\"1\">\r\n");
      out.write("	                    <tr>\r\n");
      out.write("	                        <td class=\"table2_td1\"><strong>아이디</strong></td>\r\n");
      out.write("	                        <td class=\"table2_td2\">\r\n");
      out.write("	                            <input type=\"text\" id=\"input_id\" name=\"id\"/>\r\n");
      out.write("	                            <input type=\"hidden\" id=\"input_id_hid\" name=\"id\"/>\r\n");
      out.write("	                            <div id=\"hiddendiv_id\"></div></td>\r\n");
      out.write("	                        <td class=\"table2_td3\">\r\n");
      out.write("	                            <button class=\"t2_btn\" type=\"button\" id=\"Btn_IDduplicate\" onclick=\"fn_IDduplicatecheck()\">중복<br/>확인</button>\r\n");
      out.write("	                        </td>\r\n");
      out.write("	                        <td colspan=\"2\" class=\"table2_td4\" id=\"input_not1\">\r\n");
      out.write("	                                <span>영문, 숫자를 조합하여 <br/> 6~20자 이내로 입력하세요.<br/>\r\n");
      out.write("	                                    <!-- (대소문자 구별X. 한글, 특수문자, <br/>띄어쓰기 사용 불가) -->\r\n");
      out.write("	                                </span>\r\n");
      out.write("	                        </td>\r\n");
      out.write("	\r\n");
      out.write("	                    </tr>\r\n");
      out.write("	                    \r\n");
      out.write("	                    <tr>\r\n");
      out.write("                        <td class=\"table2_td1\"><strong>이름</strong></td>\r\n");
      out.write("                        <td class=\"table2_td2\">\r\n");
      out.write("                            <input type=\"text\" id=\"input_name\" name=\"name\"/>\r\n");
      out.write("                        </td>\r\n");
      out.write("                        <td class=\"table2_td3\"></td>\r\n");
      out.write("                        <td class=\"table2_td4_name\" id=\"table2_nameinput\" colspan=\"3\">\r\n");
      out.write("	                                <span>주민등록상 실명을 입력해주세요.\r\n");
      out.write("	                                </span>\r\n");
      out.write("                        </td>\r\n");
      out.write("                    	</tr>\r\n");
      out.write("                    	\r\n");
      out.write("	                    <tr>\r\n");
      out.write("	                        <td class=\"table2_td1\"><strong>비밀번호</strong></td>\r\n");
      out.write("	                        <td class=\"table2_td2\">\r\n");
      out.write("	                            <input type=\"password\" id=\"input_pass\" name=\"pwd\"/>\r\n");
      out.write("	                        </td>\r\n");
      out.write("	                        <td class=\"table2_td3\"></td>\r\n");
      out.write("	                        <td class=\"table2_td4\" id=\"table2_tr2_td4\" colspan=\"3\">\r\n");
      out.write("	                                <span>영문, 숫자, 특수문자를 조합하여<br/> 8~20자 이내로 입력하세요.\r\n");
      out.write("	                                </span>\r\n");
      out.write("	                        </td>\r\n");
      out.write("	\r\n");
      out.write("	                    </tr>\r\n");
      out.write("	                    <tr>\r\n");
      out.write("	                        <td class=\"table2_td1\"><strong>비밀번호 <br/> 확인</strong></td>\r\n");
      out.write("	                        <td class=\"table2_td2\">\r\n");
      out.write("	                            <input  type=\"password\" id=\"input_pass2\" name=\"input_pass2\"/>\r\n");
      out.write("	                        </td>\r\n");
      out.write("	                        <td class=\"table2_td3\" colspan=\"2\"><span id=\"hiddenspan_pass2\">&nbsp;</span></td>\r\n");
      out.write("	                    </tr>\r\n");
      out.write("	                    <tr>\r\n");
      out.write("	                        <td class=\"table2_td1\"><strong>닉네임</strong></td>\r\n");
      out.write("	                        <td class=\"table2_td2\">\r\n");
      out.write("	                            <input type=\"text\" id=\"input_nick\" name=\"nick_nm\"/>\r\n");
      out.write("	                            <input type=\"hidden\" id=\"input_nick_hid\" name=\"nick_nm\"/>\r\n");
      out.write("	                            <div id=\"hiddendiv_nick\"></div>\r\n");
      out.write("	                        </td>\r\n");
      out.write("	                        <td class=\"table2_td3\"><button class=\"t2_btn\" type=\"button\" id=\"Btn_nickDuplicate\" onclick=\"fn_NickduplicateCheck()\">중복<br/>확인</button></td>\r\n");
      out.write("	                        <td colspan=\"2\" class=\"table2_td4\" id = \"input_not3\" >\r\n");
      out.write("	                                <span >한글, 영문, 숫자 사용이 가능합니다. <br/> 6~20자 이내로 입력하세요. <br/> 한글은 3~10자까지 입력 가능합니다.<br/>\r\n");
      out.write("	                                    <!-- (대소문자 구별X. 특수문자, <br/> 띄어쓰기 사용 불가) -->\r\n");
      out.write("	                                </span>\r\n");
      out.write("	                        </td>\r\n");
      out.write("	                    </tr>\r\n");
      out.write("	                    <tr id=\"email_tr\">\r\n");
      out.write("	                        <td class=\"table2_td1\"><strong>이메일</strong></td>\r\n");
      out.write("	                        <td colspan=\"1\" id=\"table2_mtd1\">\r\n");
      out.write("	                            <div class=\"hiddendiv_email_sub\">&nbsp;</div>\r\n");
      out.write("	                            <input class=\"mailinput\" id=\"mailinput1\" name=\"_email\" type=\"text\"/>\r\n");
      out.write("	                            <input type=\"hidden\" id=\"email\" name=\"email\" value=\"\" />\r\n");
      out.write("	                             <!--히든타입 인풋을 만들어 name을 email로 하고 값을 메일인풋1과2를 합친것으로 저장해야함-->\r\n");
      out.write("	                            <div class=\"hiddendiv_email\">&nbsp;</div>\r\n");
      out.write("	                        </td>\r\n");
      out.write("	                        <td id=\"table2_mtd2\"> @</td>\r\n");
      out.write("	                        <td id=\"table2_mtd3\">\r\n");
      out.write("	                            <div class=\"hiddendiv_email_sub\">&nbsp;</div>\r\n");
      out.write("	                            <input class=\"mailinput\" id=\"mailinput2\" name=\"mailinput2\" type=\"text\" \r\n");
      out.write("	                            	 style=\"width: 135px; height: 25px;\" />\r\n");
      out.write("	                           	<input type=\"hidden\" id=\"mail2\" name=\"mail2\" value=\"\">\r\n");
      out.write("	                            <select id=\"email_option\" name=\"email_option\" onchange=\"selectBoxChange(this.value)\">\r\n");
      out.write("	                                <option value=\"\">도메인 선택</option>\r\n");
      out.write("	                                <option value=\"gmail.com\">gmail.com</option>\r\n");
      out.write("	                                <option value=\"naver.com\">naver.com</option>\r\n");
      out.write("	                                <option value=\"daum.net\">daum.net</option>\r\n");
      out.write("	                                <option value=\"direct\">직접입력</option>\r\n");
      out.write("	                            </select>\r\n");
      out.write("	                             <div class=\"hiddendiv_email\">&nbsp;</div>\r\n");
      out.write("	                        </td>\r\n");
      out.write("	                        <td id=\"table2_mtd4\">\r\n");
      out.write("	                            <button class=\"t2_btn\" type=\"button\" onclick=\"checkEmail()\">이메일<br/>인증</button>\r\n");
      out.write("	                            <input type=\"hidden\" id=\"emailCerticode\" name=\"emailCerticode\" value=\"\"/>\r\n");
      out.write("	                        </td>\r\n");
      out.write("	                    </tr>\r\n");
      out.write("	                    <tr id=\"last_tr\">\r\n");
      out.write("	                        <td colspan=\"5\">\r\n");
      out.write("	                            <button class=\"t2_btn\" name=\"submit_btn\" id=\"submit_btn\" type=\"button\" onclick=\"last_validate()\">가입하기</button>\r\n");
      out.write("	                        </td>\r\n");
      out.write("	                    </tr>\r\n");
      out.write("	                </table>\r\n");
      out.write("	            </form>\r\n");
      out.write("	        </div>\r\n");
      out.write("	    </section>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/login_signup/signup_input.jsp(4,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/login_signup/signup_input.jsp(4,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/login_signup/signup_input.jsp(4,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
